image: docker:stable

services:
  - docker:dind

stages:
  - build_dev
  - deploy_dev
  - build_prod
  - deploy_prod
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2


before_script:
  - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD

build_dev:
  stage: build_prod
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker build --build-arg ENV_STAGES=development --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --tag $CI_REGISTRY_IMAGE:latest
      .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

deploy_dev:
  stage: deploy_dev
  before_script: 
    - mkdir -p ~/.ssh     
    - echo -e "$SERVER_PROD_KEY" > ~/.ssh/id_rsa     
    - chmod 600 ~/.ssh/id_rsa     
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config' 
       
  script:
    - ssh deployer@$SERVER_PROD_IP "/app/$CI_PROJECT_NAME/deploy.sh --projectName $CI_PROJECT_NAME --user $CI_REGISTRY_USER --token $DOCKER_REPO_TOKEN --tag $CI_COMMIT_SHA"
  only:
    - development

build_prod:
  stage: build_prod
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker build --build-arg ENV_STAGES=production --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --tag $CI_REGISTRY_IMAGE:latest
      .
      - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - tags

deploy_prod:
  stage: deploy_prod
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$SERVER_PROD_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  script:
    - ssh deployer@$SERVER_PROD_IP "/app/$CI_PROJECT_NAME/deploy.sh --projectName $CI_PROJECT_NAME --user $CI_REGISTRY_USER --token $DOCKER_REPO_TOKEN --tag $CI_COMMIT_SHA"
  only:
    - tags
